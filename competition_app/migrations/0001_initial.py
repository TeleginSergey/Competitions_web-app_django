# Generated by Django 5.0.6 on 2024-05-27 13:07

import competition_app.models
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Competition',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, default=competition_app.models.get_datetime, null=True, validators=[competition_app.models.check_created], verbose_name='created')),
                ('modified', models.DateTimeField(blank=True, default=competition_app.models.get_datetime, null=True, validators=[competition_app.models.check_modified], verbose_name='modified')),
                ('title', models.TextField(max_length=200, unique=True, verbose_name='title')),
                ('date_of_start', models.DateField(blank=True, null=True, verbose_name='date_of_start')),
                ('date_of_end', models.DateField(blank=True, null=True, verbose_name='date_of_end')),
            ],
            options={
                'verbose_name': 'competition',
                'verbose_name_plural': 'competitions',
                'db_table': '"competition_schema"."competition"',
                'ordering': ['date_of_start', 'title'],
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, default=competition_app.models.get_datetime, null=True, validators=[competition_app.models.check_created], verbose_name='created')),
                ('modified', models.DateTimeField(blank=True, default=competition_app.models.get_datetime, null=True, validators=[competition_app.models.check_modified], verbose_name='modified')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'client',
                'verbose_name_plural': 'clients',
                'db_table': '"competition_schema"."client"',
            },
        ),
        migrations.CreateModel(
            name='CompetitionSport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, default=competition_app.models.get_datetime, null=True, validators=[competition_app.models.check_created], verbose_name='created')),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='competition_app.competition', verbose_name='competition')),
            ],
            options={
                'verbose_name': 'relationship_competition_sport',
                'verbose_name_plural': 'relationships_competition_sport',
                'db_table': '"competition_schema"."competition_sport"',
            },
        ),
        migrations.CreateModel(
            name='Sport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, default=competition_app.models.get_datetime, null=True, validators=[competition_app.models.check_created], verbose_name='created')),
                ('modified', models.DateTimeField(blank=True, default=competition_app.models.get_datetime, null=True, validators=[competition_app.models.check_modified], verbose_name='modified')),
                ('title', models.TextField(max_length=200, unique=True, verbose_name='title')),
                ('description', models.TextField(blank=True, max_length=1000, null=True, verbose_name='description')),
                ('competitions', models.ManyToManyField(through='competition_app.CompetitionSport', to='competition_app.competition', verbose_name='competitions')),
            ],
            options={
                'verbose_name': 'sport',
                'verbose_name_plural': 'sports',
                'db_table': '"competition_schema"."sport"',
                'ordering': ['title'],
            },
        ),
        migrations.AddField(
            model_name='competitionsport',
            name='sport',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='competition_app.sport', verbose_name='sport'),
        ),
        migrations.AddField(
            model_name='competition',
            name='sports',
            field=models.ManyToManyField(through='competition_app.CompetitionSport', to='competition_app.sport', verbose_name='sport'),
        ),
        migrations.AlterUniqueTogether(
            name='competitionsport',
            unique_together={('competition', 'sport')},
        ),
        migrations.CreateModel(
            name='Stage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, default=competition_app.models.get_datetime, null=True, validators=[competition_app.models.check_created], verbose_name='created')),
                ('modified', models.DateTimeField(blank=True, default=competition_app.models.get_datetime, null=True, validators=[competition_app.models.check_modified], verbose_name='modified')),
                ('title', models.TextField(max_length=200, verbose_name='title')),
                ('date', models.DateField(blank=True, null=True, verbose_name='date')),
                ('place', models.TextField(blank=True, null=True, verbose_name='place')),
                ('competition_sport', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='competition_app.competitionsport', verbose_name='competition_sport')),
            ],
            options={
                'verbose_name': 'stage',
                'verbose_name_plural': 'stages',
                'db_table': '"competition_schema"."stage"',
                'unique_together': {('title', 'competition_sport')},
            },
        ),
    ]
